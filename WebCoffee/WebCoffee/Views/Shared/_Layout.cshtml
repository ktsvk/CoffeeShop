@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject WebCoffee.Data.ApplicationDbContext context
@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Coffee</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/normalize.css" />
    <link rel="stylesheet" href="~/css/style.css" />
    <link rel="stylesheet" href="~/css/main.css" />
    <link rel="stylesheet" href="~/css/global.css" />
</head>
<body>
    <div class="header-bg">
        <div class="container">
            <div class="header">
                <a asp-controller="Home" asp-action="Index" class="header-logo">
                    <img src="~/img/1.png" alt="logo">
                    WebCoffee
                </a>
                <div class="header-content">
                    <div class="header-items">
                        <a asp-controller="Menu" asp-action="Index" class="header-item">Меню</a>
                        @if (signInManager.IsSignedIn(User) && User.IsInRole("Employee"))
                        {
                            <a asp-controller="Purchases" asp-action="Job" class="header-item">Заказы</a>
                        }
                        @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                        {
                            <a asp-controller="Users" asp-action="Index" class="header-item">Пользователи</a>
                            <a asp-controller="Report" asp-action="Index" class="header-item">Отчет</a>
                        }
                    </div>
                    @if (signInManager.IsSignedIn(User))
                    {
                        var identityUser = await userManager.GetUserAsync(User);
                        var user = await context.Users.Where(x => x.Id == identityUser.Id)
                            .Include(x => x.Photo)
                            .FirstOrDefaultAsync();
                        <div class="header-account">
                            <a class="header-item"  asp-controller="Bag" asp-action="Index">Корзина</a>
                            <a class="header-item header-account-photo" asp-controller="Manage" asp-action="Index" asp-route-id="@user.Id">
                                <img src="@Url.Content(user.Photo.Path + user.Photo.Name)" alt="profile">
                            </a>
                            <a class="header-item" asp-controller="Account" asp-action="Logout">Выйти</a>
                        </div>
                    }
                    else
                    {
                        <div class="header-items">
                            <a id="login-btn" class="header-item" asp-controller="Account" asp-action="Login">Войти</a>
                            <a id="register-btn" class="header-item" asp-controller="Account" asp-action="Register">Зарегестрироваться</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="section">
        <div class="container">
            @RenderBody()
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/main.js" asp-append-version="true"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
